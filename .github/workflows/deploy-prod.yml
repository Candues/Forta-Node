name: Deploy Prod

on:
  workflow_dispatch: 
    branches: [ master ]

jobs:
  containers:
    name: Build and push containers
    runs-on: ubuntu-latest
    environment: prod
    outputs:
      node-image-ref: ${{ steps.write-output.outputs.node-image-ref }}
      node-release-cid: ${{ steps.write-output.outputs.node-release-cid }}
    strategy:
      matrix:
        image-name: [
            "node"
        ]
    steps:
      - name: Clear artifacts
        uses: kolpav/purge-artifacts-action@v1
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          expire-in: 7days
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build and push container
        id: build-and-push
        uses: ./.github/actions/build-push
        with:
          registry: disco.forta.network
          name: ${{ matrix.image-name }}
      - name: Write image reference as output
        id: write-output
        run: |
          echo "::set-output name=${{ matrix.image-name }}-release-cid::${{ steps.build-and-push.outputs.release-cid }}"
          echo "::set-output name=${{ matrix.image-name }}-image-ref::${{ steps.build-and-push.outputs.image-reference }}"

  publish-hash:
    name: Publish Hash to Contract
    needs: containers
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Echo Hash
        run: |
          echo "release-cid=${{ needs.containers.outputs.node-release-cid }}"
      - name: Publish Hash
        run: |
          ./scripts/publish-release.sh ${{ needs.containers.outputs.node-release-cid }} ${{ secrets.PROD_PUBLISH_AUTOTASK_KEY }} ${{ secrets.PROD_PUBLISH_AUTOTASK_URL }}

  build:
    name: Build
    needs: containers
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Echo Image References
        run: |
          echo "node=${{ needs.containers.outputs.node-image-ref }}"
      - name: Clear artifacts
        uses: kolpav/purge-artifacts-action@v1
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          expire-in: 7days
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Create build for revision
        run: |
          ./scripts/build.sh ${{ needs.containers.outputs.node-image-ref }} \
            'remote' ${{ needs.containers.outputs.node-release-cid }} ${{ github.sha }}
          chmod 755 forta
      - name: Configure AWS credentials (build artifact -> S3)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PROD_RELEASE_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.PROD_RELEASE_AWS_SECRET_KEY }}
          aws-region: us-east-1
      - name: Copy build to build artifacts bucket
        env:
          BUCKET_NAME: ${{ secrets.PROD_BUILD_ARTIFACTS_BUCKET_NAME }}
          REVISION: ${{ github.sha }}
        run: |
          aws s3 cp forta "s3://$BUCKET_NAME/forta-$REVISION"
