// Code generated by MockGen. DO NOT EDIT.
// Source: services/registry/registry.go

// Package mock_registry is a generated GoMock package.
package mock_registry

import (
	regtypes "OpenZeppelin/fortify-node/services/registry/regtypes"
	big "math/big"
	reflect "reflect"

	bind "github.com/ethereum/go-ethereum/accounts/abi/bind"
	gomock "github.com/golang/mock/gomock"
)

// MockContractRegistryCaller is a mock of ContractRegistryCaller interface.
type MockContractRegistryCaller struct {
	ctrl     *gomock.Controller
	recorder *MockContractRegistryCallerMockRecorder
}

// MockContractRegistryCallerMockRecorder is the mock recorder for MockContractRegistryCaller.
type MockContractRegistryCallerMockRecorder struct {
	mock *MockContractRegistryCaller
}

// NewMockContractRegistryCaller creates a new mock instance.
func NewMockContractRegistryCaller(ctrl *gomock.Controller) *MockContractRegistryCaller {
	mock := &MockContractRegistryCaller{ctrl: ctrl}
	mock.recorder = &MockContractRegistryCallerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContractRegistryCaller) EXPECT() *MockContractRegistryCallerMockRecorder {
	return m.recorder
}

// AgentAt mocks base method.
func (m *MockContractRegistryCaller) AgentAt(opts *bind.CallOpts, _poolId [32]byte, index *big.Int) ([32]byte, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AgentAt", opts, _poolId, index)
	ret0, _ := ret[0].([32]byte)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// AgentAt indicates an expected call of AgentAt.
func (mr *MockContractRegistryCallerMockRecorder) AgentAt(opts, _poolId, index interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AgentAt", reflect.TypeOf((*MockContractRegistryCaller)(nil).AgentAt), opts, _poolId, index)
}

// AgentLength mocks base method.
func (m *MockContractRegistryCaller) AgentLength(opts *bind.CallOpts, _poolId [32]byte) (*big.Int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AgentLength", opts, _poolId)
	ret0, _ := ret[0].(*big.Int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AgentLength indicates an expected call of AgentLength.
func (mr *MockContractRegistryCallerMockRecorder) AgentLength(opts, _poolId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AgentLength", reflect.TypeOf((*MockContractRegistryCaller)(nil).AgentLength), opts, _poolId)
}

// PoolVersion mocks base method.
func (m *MockContractRegistryCaller) PoolVersion(ops *bind.CallOpts, _poolId [32]byte) (*big.Int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PoolVersion", ops, _poolId)
	ret0, _ := ret[0].(*big.Int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PoolVersion indicates an expected call of PoolVersion.
func (mr *MockContractRegistryCallerMockRecorder) PoolVersion(ops, _poolId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PoolVersion", reflect.TypeOf((*MockContractRegistryCaller)(nil).PoolVersion), ops, _poolId)
}

// MockIPFSClient is a mock of IPFSClient interface.
type MockIPFSClient struct {
	ctrl     *gomock.Controller
	recorder *MockIPFSClientMockRecorder
}

// MockIPFSClientMockRecorder is the mock recorder for MockIPFSClient.
type MockIPFSClientMockRecorder struct {
	mock *MockIPFSClient
}

// NewMockIPFSClient creates a new mock instance.
func NewMockIPFSClient(ctrl *gomock.Controller) *MockIPFSClient {
	mock := &MockIPFSClient{ctrl: ctrl}
	mock.recorder = &MockIPFSClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPFSClient) EXPECT() *MockIPFSClientMockRecorder {
	return m.recorder
}

// GetAgentFile mocks base method.
func (m *MockIPFSClient) GetAgentFile(cid string) (*regtypes.AgentFile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAgentFile", cid)
	ret0, _ := ret[0].(*regtypes.AgentFile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgentFile indicates an expected call of GetAgentFile.
func (mr *MockIPFSClientMockRecorder) GetAgentFile(cid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgentFile", reflect.TypeOf((*MockIPFSClient)(nil).GetAgentFile), cid)
}
