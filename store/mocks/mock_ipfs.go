// Code generated by MockGen. DO NOT EDIT.
// Source: store/ipfs.go

// Package mock_store is a generated GoMock package.
package mock_store

import (
	reflect "reflect"

	config "github.com/forta-protocol/forta-node/config"
	regtypes "github.com/forta-protocol/forta-node/services/registry/regtypes"
	gomock "github.com/golang/mock/gomock"
)

// MockIPFSClient is a mock of IPFSClient interface.
type MockIPFSClient struct {
	ctrl     *gomock.Controller
	recorder *MockIPFSClientMockRecorder
}

// MockIPFSClientMockRecorder is the mock recorder for MockIPFSClient.
type MockIPFSClientMockRecorder struct {
	mock *MockIPFSClient
}

// NewMockIPFSClient creates a new mock instance.
func NewMockIPFSClient(ctrl *gomock.Controller) *MockIPFSClient {
	mock := &MockIPFSClient{ctrl: ctrl}
	mock.recorder = &MockIPFSClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPFSClient) EXPECT() *MockIPFSClientMockRecorder {
	return m.recorder
}

// GetAgentFile mocks base method.
func (m *MockIPFSClient) GetAgentFile(cid string) (*regtypes.AgentFile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAgentFile", cid)
	ret0, _ := ret[0].(*regtypes.AgentFile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgentFile indicates an expected call of GetAgentFile.
func (mr *MockIPFSClientMockRecorder) GetAgentFile(cid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgentFile", reflect.TypeOf((*MockIPFSClient)(nil).GetAgentFile), cid)
}

// GetReleaseManifest mocks base method.
func (m *MockIPFSClient) GetReleaseManifest(cid string) (*config.ReleaseManifest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReleaseManifest", cid)
	ret0, _ := ret[0].(*config.ReleaseManifest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetReleaseManifest indicates an expected call of GetReleaseManifest.
func (mr *MockIPFSClientMockRecorder) GetReleaseManifest(cid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReleaseManifest", reflect.TypeOf((*MockIPFSClient)(nil).GetReleaseManifest), cid)
}
